using UnityEngine;
using System.Collections;

/// <summary>
/// –ü—Ä–æ—Å—Ç–æ–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –±–∞–≥–∞–∂–Ω–∏–∫–æ–º - –¢–û–õ–¨–ö–û —Ä—É—á–Ω–æ–µ, –±–µ–∑ –∑–æ–Ω –≤—ã–≥—Ä—É–∑–∫–∏ + –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è
/// </summary>
public class SimpleTrunkInteraction : MonoBehaviour
{
    [Header("–°—Å—ã–ª–∫–∏")]
    public StorageInventory vehicleStorage;
    public VehicleTrunkSlots trunkSlots;
    public GameObject interactionPanel;
    public UnityEngine.UI.Button loadButton;
    public UnityEngine.UI.Button unloadButton;
    public TMPro.TextMeshProUGUI hintText;
    
    [Header("–ù–∞—Å—Ç—Ä–æ–π–∫–∏")]
    public float interactionDistance = 3f;
    
    [Header("–û—Ç–ª–∞–¥–∫–∞")]
    public bool debugLogs = true;
    
    private PlayerCarryController playerCarry;
    private bool isPlayerNearby;
    
    void Start()
    {
        Debug.Log("[SimpleTrunkInteraction] ===== –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø =====");
        
        playerCarry = FindObjectOfType<PlayerCarryController>();
        Debug.Log($"[SimpleTrunkInteraction] PlayerCarryController: {(playerCarry ? "–Ω–∞–π–¥–µ–Ω" : "–ù–ï –ù–ê–ô–î–ï–ù")}");
        
        Debug.Log($"[SimpleTrunkInteraction] vehicleStorage: {(vehicleStorage ? vehicleStorage.ProviderId : "NULL")}");
        Debug.Log($"[SimpleTrunkInteraction] trunkSlots: {(trunkSlots ? "–Ω–∞–π–¥–µ–Ω" : "NULL")}");
        Debug.Log($"[SimpleTrunkInteraction] interactionPanel: {(interactionPanel ? interactionPanel.name : "NULL")}");

        // –û—Ç–ª–æ–∂–∏–º –ø—Ä–∏–≤—è–∑–∫—É –∫–Ω–æ–ø–æ–∫ –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –∫–∞–¥—Ä–∞, —á—Ç–æ–±—ã UI —É—Å–ø–µ–ª —Å–æ–∑–¥–∞—Ç—å—Å—è
        StartCoroutine(DelayedButtonBinding());

        Debug.Log($"[SimpleTrunkInteraction] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –¥–ª—è {gameObject.name}");
    }

    /// <summary>
    /// –û—Ç–ª–æ–∂–µ–Ω–Ω–∞—è –ø—Ä–∏–≤—è–∑–∫–∞ –∫–Ω–æ–ø–æ–∫ –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è UI
    /// </summary>
    IEnumerator DelayedButtonBinding()
    {
        // –ñ–¥–µ–º –æ–¥–∏–Ω –∫–∞–¥—Ä, —á—Ç–æ–±—ã SimpleTrunkOnly —É—Å–ø–µ–ª —Å–æ–∑–¥–∞—Ç—å UI
        yield return null;

        Debug.Log("[SimpleTrunkInteraction] ===== –û–¢–õ–û–ñ–ï–ù–ù–ê–Ø –ü–†–ò–í–Ø–ó–ö–ê –ö–ù–û–ü–û–ö =====");
        Debug.Log($"[SimpleTrunkInteraction] loadButton: {(loadButton ? loadButton.name : "NULL")}");
        Debug.Log($"[SimpleTrunkInteraction] unloadButton: {(unloadButton ? unloadButton.name : "NULL")}");
        
        if (loadButton)
        {
            Debug.Log("[SimpleTrunkInteraction] –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º LoadToTrunk –∫ loadButton");
            loadButton.onClick.RemoveAllListeners();
            loadButton.onClick.AddListener(LoadToTrunk);
            loadButton.onClick.AddListener(() => Debug.Log("[SimpleTrunkInteraction] üî• –ö–ù–û–ü–ö–ê –ó–ê–ì–†–£–ó–ö–ò –ù–ê–ñ–ê–¢–ê!"));
        }
        else
        {
            Debug.LogError("[SimpleTrunkInteraction] ‚ùå loadButton == NULL –ø–æ—Å–ª–µ –∑–∞–¥–µ—Ä–∂–∫–∏!");
        }
            
        if (unloadButton)
        {
            Debug.Log("[SimpleTrunkInteraction] –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º UnloadFromTrunk –∫ unloadButton");
            unloadButton.onClick.RemoveAllListeners();
            unloadButton.onClick.AddListener(UnloadFromTrunk);
            unloadButton.onClick.AddListener(() => Debug.Log("[SimpleTrunkInteraction] üî• –ö–ù–û–ü–ö–ê –í–´–ì–†–£–ó–ö–ò –ù–ê–ñ–ê–¢–ê!"));
        }
        else
        {
            Debug.LogError("[SimpleTrunkInteraction] ‚ùå unloadButton == NULL –ø–æ—Å–ª–µ –∑–∞–¥–µ—Ä–∂–∫–∏!");
        }
    }

    /// <summary>
    /// –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ (–¥–ª—è –≤—ã–∑–æ–≤–∞ –∏–∑–≤–Ω–µ)
    /// </summary>
    public void RebindButtons()
    {
        Debug.Log("[SimpleTrunkInteraction] ===== –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ï –ü–ï–†–ï–ü–û–î–ö–õ–Æ–ß–ï–ù–ò–ï =====");
        
        if (loadButton)
        {
            loadButton.onClick.RemoveAllListeners();
            loadButton.onClick.AddListener(LoadToTrunk);
            loadButton.onClick.AddListener(() => Debug.Log("[SimpleTrunkInteraction] üî• –ö–ù–û–ü–ö–ê –ó–ê–ì–†–£–ó–ö–ò –ù–ê–ñ–ê–¢–ê!"));
            Debug.Log("[SimpleTrunkInteraction] ‚úÖ –ö–Ω–æ–ø–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∞");
        }
        
        if (unloadButton)
        {
            unloadButton.onClick.RemoveAllListeners();
            unloadButton.onClick.AddListener(UnloadFromTrunk);
            unloadButton.onClick.AddListener(() => Debug.Log("[SimpleTrunkInteraction] üî• –ö–ù–û–ü–ö–ê –í–´–ì–†–£–ó–ö–ò –ù–ê–ñ–ê–¢–ê!"));
            Debug.Log("[SimpleTrunkInteraction] ‚úÖ –ö–Ω–æ–ø–∫–∞ –≤—ã–≥—Ä—É–∑–∫–∏ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∞");
        }
    }

    void Update()
    {
        CheckPlayerDistance();
        UpdateUI();
    }

    void CheckPlayerDistance()
    {
        if (!playerCarry) return;

        float distance = Vector3.Distance(transform.position, playerCarry.transform.position);
        bool wasNearby = isPlayerNearby;
        isPlayerNearby = distance <= interactionDistance;

        if (isPlayerNearby != wasNearby)
        {
            Debug.Log($"[SimpleTrunkInteraction] –ò–≥—Ä–æ–∫ {(isPlayerNearby ? "–ø–æ–¥–æ—à–µ–ª" : "–æ—Ç–æ—à–µ–ª")} –∫ –±–∞–≥–∞–∂–Ω–∏–∫—É");
            Debug.Log($"[SimpleTrunkInteraction] interactionPanel: {(interactionPanel ? interactionPanel.name : "NULL")}");
            
            if (interactionPanel)
            {
                interactionPanel.SetActive(isPlayerNearby);
                Debug.Log($"[SimpleTrunkInteraction] UI –ø–∞–Ω–µ–ª—å {(isPlayerNearby ? "–ø–æ–∫–∞–∑–∞–Ω–∞" : "—Å–∫—Ä—ã—Ç–∞")}");
            }
            else
            {
                Debug.LogError("[SimpleTrunkInteraction] ‚ùå interactionPanel == NULL, UI –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ–∫–∞–∑–∞–Ω!");
            }
        }
    }

    void UpdateUI()
    {
        if (!isPlayerNearby || !interactionPanel || !interactionPanel.activeInHierarchy)
            return;

        bool playerHasItem = playerCarry && playerCarry.IsCarrying;
        bool trunkHasItems = HasItemsInTrunk();

        // –ö–Ω–æ–ø–∫–∏
        if (loadButton)
            loadButton.interactable = playerHasItem;

        if (unloadButton)
            unloadButton.interactable = trunkHasItems;

        // –ü–æ–¥—Å–∫–∞–∑–∫–∞
        if (hintText)
        {
            if (playerHasItem && trunkHasItems)
                hintText.text = "–ú–æ–∂–µ—Ç–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–ª–∏ –≤—ã–≥—Ä—É–∑–∏—Ç—å";
            else if (playerHasItem)
                hintText.text = "–ó–∞–≥—Ä—É–∑–∏—Ç—å –≤ –±–∞–≥–∞–∂–Ω–∏–∫";
            else if (trunkHasItems)
                hintText.text = "–í—ã–≥—Ä—É–∑–∏—Ç—å –∏–∑ –±–∞–≥–∞–∂–Ω–∏–∫–∞";
            else
                hintText.text = "–ë–∞–≥–∞–∂–Ω–∏–∫ –ø—É—Å—Ç, —É –≤–∞—Å –Ω–µ—Ç –ø—Ä–µ–¥–º–µ—Ç–æ–≤";
        }
    }

    /// <summary>
    /// –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ä–µ—Å—É—Ä—Å –∏–∑ —Ä—É–∫ –≤ –±–∞–≥–∞–∂–Ω–∏–∫ (–∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ—Ç –∂–µ –æ–±—ä–µ–∫—Ç)
    /// </summary>
    public void LoadToTrunk()
    {
        Debug.Log("[SimpleTrunkInteraction] ===== –ù–ê–ß–ê–õ–û LoadToTrunk =====");
        
        if (!playerCarry)
        {
            Debug.LogError("[SimpleTrunkInteraction] ‚ùå playerCarry == null");
            return;
        }
        
        if (!vehicleStorage)
        {
            Debug.LogError("[SimpleTrunkInteraction] ‚ùå vehicleStorage == null");
            return;
        }
        
        if (!playerCarry.IsCarrying)
        {
            Debug.LogWarning("[SimpleTrunkInteraction] ‚ùå –ò–≥—Ä–æ–∫ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–µ—Å–µ—Ç");
            return;
        }

        var carriedProp = playerCarry.CurrentProp;
        Debug.Log($"[SimpleTrunkInteraction] Carried Prop: {(carriedProp ? carriedProp.name : "NULL")}");
        
        if (!carriedProp)
        {
            Debug.LogError("[SimpleTrunkInteraction] ‚ùå CurrentProp == null, –Ω–æ IsCarrying == true");
            return;
        }

        var tag = carriedProp.GetComponentInChildren<CarryPropTag>();
        Debug.Log($"[SimpleTrunkInteraction] CarryPropTag: {(tag ? "–Ω–∞–π–¥–µ–Ω" : "–ù–ï –ù–ê–ô–î–ï–ù")}");
        
        var resource = tag?.resource;
        Debug.Log($"[SimpleTrunkInteraction] Resource: {(resource ? resource.DisplayName : "NULL")}");

        if (!resource)
        {
            Debug.LogError("[SimpleTrunkInteraction] ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–∏–ø —Ä–µ—Å—É—Ä—Å–∞");
            return;
        }

        // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º ResourceDef –≤ ScriptableObject –¥–ª—è StorageInventory
        ScriptableObject resourceSO = resource as ScriptableObject;
        Debug.Log($"[SimpleTrunkInteraction] ResourceDef as ScriptableObject: {(resourceSO ? "—É—Å–ø–µ—à–Ω–æ" : "–û–®–ò–ë–ö–ê")}");
        
        if (!resourceSO)
        {
            Debug.LogError($"[SimpleTrunkInteraction] ‚ùå ResourceDef {resource.DisplayName} –Ω–µ —è–≤–ª—è–µ—Ç—Å—è ScriptableObject");
            return;
        }

        Debug.Log($"[SimpleTrunkInteraction] –ü—ã—Ç–∞–µ–º—Å—è –¥–æ–±–∞–≤–∏—Ç—å –≤ —Å–∫–ª–∞–¥: {resourceSO.name}");
        int added = vehicleStorage.AddItem(resourceSO, 1);
        Debug.Log($"[SimpleTrunkInteraction] –î–æ–±–∞–≤–ª–µ–Ω–æ –≤ —Å–∫–ª–∞–¥: {added}");
        
        if (added > 0)
        {
            Debug.Log("[SimpleTrunkInteraction] ‚úÖ –£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ —Å–∫–ª–∞–¥, –æ—Ç—Ü–µ–ø–ª—è–µ–º –æ—Ç –∏–≥—Ä–æ–∫–∞");
            
            // –í–ê–ñ–ù–û: –ù–µ —É–Ω–∏—á—Ç–æ–∂–∞–µ–º –æ–±—ä–µ–∫—Ç, –∞ –ø–µ—Ä–µ–¥–∞–µ–º –µ–≥–æ –≤ –±–∞–≥–∞–∂–Ω–∏–∫ –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏
            playerCarry.Detach();
            Debug.Log("[SimpleTrunkInteraction] –ò–≥—Ä–æ–∫ –æ—Ç—Ü–µ–ø–ª–µ–Ω –æ—Ç –æ–±—ä–µ–∫—Ç–∞");
            
            // –î–æ–±–∞–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª—å–Ω–æ –≤ –±–∞–≥–∞–∂–Ω–∏–∫ —Ç–æ—Ç –∂–µ –æ–±—ä–µ–∫—Ç, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ—Å –∏–≥—Ä–æ–∫
            if (trunkSlots)
            {
                Debug.Log("[SimpleTrunkInteraction] –ü—ã—Ç–∞–µ–º—Å—è —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –æ–±—ä–µ–∫—Ç –≤ —Å–ª–æ—Ç–µ...");
                bool placed = trunkSlots.PlaceVisualObject(carriedProp, resource);
                Debug.Log($"[SimpleTrunkInteraction] –†–∞–∑–º–µ—â–µ–Ω–∏–µ –≤ —Å–ª–æ—Ç–µ: {(placed ? "–£–°–ü–ï–®–ù–û" : "–ù–ï–£–î–ê–ß–ù–û")}");
                
                if (!placed)
                {
                    Debug.LogWarning("[SimpleTrunkInteraction] ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –≤ —Å–ª–æ—Ç–µ, —É–Ω–∏—á—Ç–æ–∂–∞–µ–º –æ–±—ä–µ–∫—Ç");
                    Destroy(carriedProp);
                }
            }
            else
            {
                Debug.LogWarning("[SimpleTrunkInteraction] ‚ö†Ô∏è trunkSlots == null, —É–Ω–∏—á—Ç–æ–∂–∞–µ–º –æ–±—ä–µ–∫—Ç");
                Destroy(carriedProp);
            }
            
            Debug.Log($"[SimpleTrunkInteraction] ‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω —Ä–µ–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç –≤ –±–∞–≥–∞–∂–Ω–∏–∫: {resource.DisplayName}");
        }
        else
        {
            Debug.LogError("[SimpleTrunkInteraction] ‚ùå –ë–∞–≥–∞–∂–Ω–∏–∫ –ø–æ–ª–æ–Ω –∏–ª–∏ –æ—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ —Å–∫–ª–∞–¥");
        }
        
        Debug.Log("[SimpleTrunkInteraction] ===== –ö–û–ù–ï–¶ LoadToTrunk =====");
    }

    /// <summary>
    /// –í—ã–≥—Ä—É–∑–∏—Ç—å —Ä–µ—Å—É—Ä—Å –∏–∑ –±–∞–≥–∞–∂–Ω–∏–∫–∞ –≤ —Ä—É–∫–∏ (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç —Ä–µ–∞–ª—å–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ –∏–∑ —Å–ª–æ—Ç–∞)
    /// </summary>
    public void UnloadFromTrunk()
    {
        if (!playerCarry || !vehicleStorage)
        {
            if (debugLogs)
                Debug.LogWarning("[SimpleTrunkInteraction] –ù–µ—Ç —Å—Å—ã–ª–æ–∫ –¥–ª—è –≤—ã–≥—Ä—É–∑–∫–∏");
            return;
        }

        if (playerCarry.IsCarrying)
        {
            if (debugLogs)
                Debug.LogWarning("[SimpleTrunkInteraction] –£ –∏–≥—Ä–æ–∫–∞ —É–∂–µ –µ—Å—Ç—å –ø—Ä–µ–¥–º–µ—Ç –≤ —Ä—É–∫–∞—Ö");
            return;
        }

        // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º –≤–∑—è—Ç—å —Ä–µ–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç –∏–∑ –≤–∏–∑—É–∞–ª—å–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤
        GameObject prop = null;
        ResourceDef foundResource = null;

        if (trunkSlots)
        {
            prop = trunkSlots.TakeOne();
            if (prop)
            {
                var tag = prop.GetComponent<CarryPropTag>();
                foundResource = tag?.resource;
            }
        }

        // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –≤–∏–∑—É–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç - –Ω–∞–π–¥–µ–º –ª—é–±–æ–π —Ä–µ—Å—É—Ä—Å –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ –∏ —Å–æ–∑–¥–∞–¥–∏–º –Ω–æ–≤—ã–π
        if (!prop || !foundResource)
        {
            var allResourceDefs = Resources.FindObjectsOfTypeAll<ResourceDef>();
            
            foreach (var res in allResourceDefs)
            {
                ScriptableObject resourceSO = res as ScriptableObject;
                if (resourceSO && vehicleStorage.GetAmount(resourceSO) > 0)
                {
                    foundResource = res;
                    break;
                }
            }

            if (!foundResource)
            {
                if (debugLogs)
                    Debug.LogWarning("[SimpleTrunkInteraction] –ë–∞–≥–∞–∂–Ω–∏–∫ –ø—É—Å—Ç");
                return;
            }

            // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –≤–∏–∑—É–∞–ª—å–Ω—ã–π
            if (foundResource.CarryProp)
            {
                prop = Instantiate(foundResource.CarryProp);
                var tag = prop.GetComponent<CarryPropTag>();
                if (!tag) tag = prop.AddComponent<CarryPropTag>();
                tag.resource = foundResource;

                if (debugLogs)
                    Debug.Log($"[SimpleTrunkInteraction] –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç –¥–ª—è {foundResource.DisplayName}");
            }
            else
            {
                if (debugLogs)
                    Debug.LogWarning($"[SimpleTrunkInteraction] –£ —Ä–µ—Å—É—Ä—Å–∞ {foundResource.DisplayName} –Ω–µ—Ç CarryProp");
                return;
            }
        }
        else
        {
            if (debugLogs)
                Debug.Log($"[SimpleTrunkInteraction] –í–∑—è—Ç —Ä–µ–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç {foundResource.DisplayName} –∏–∑ —Å–ª–æ—Ç–∞");
        }

        // –£–¥–∞–ª—è–µ–º –∏–∑ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
        ScriptableObject foundSO = foundResource as ScriptableObject;
        int removed = vehicleStorage.RemoveItem(foundSO, 1);
        
        if (removed > 0 && prop)
        {
            if (playerCarry.Attach(prop))
            {
                if (debugLogs)
                    Debug.Log($"[SimpleTrunkInteraction] ‚úÖ –í—ã–≥—Ä—É–∂–µ–Ω –∏–∑ –±–∞–≥–∞–∂–Ω–∏–∫–∞: {foundResource.DisplayName}");
            }
            else
            {
                Destroy(prop);
                if (debugLogs)
                    Debug.LogError("[SimpleTrunkInteraction] ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å –∫ –∏–≥—Ä–æ–∫—É");
            }
        }
        else if (prop)
        {
            Destroy(prop);
        }
    }

    /// <summary>
    /// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤ –≤ –±–∞–≥–∞–∂–Ω–∏–∫–µ
    /// </summary>
    bool HasItemsInTrunk()
    {
        if (!vehicleStorage) return false;

        var allResourceDefs = Resources.FindObjectsOfTypeAll<ResourceDef>();
        foreach (var res in allResourceDefs)
        {
            ScriptableObject resourceSO = res as ScriptableObject;
            if (resourceSO && vehicleStorage.GetAmount(resourceSO) > 0)
                return true;
        }
        return false;
    }

    /// <summary>
    /// –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –±–∞–≥–∞–∂–Ω–∏–∫–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    /// </summary>
    public string GetTrunkStatus()
    {
        if (!vehicleStorage) return "–ù–µ—Ç —Å–∫–ª–∞–¥–∞";

        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        
        if (trunkSlots)
        {
            var visualCounts = trunkSlots.GetResourceCounts();
            int totalVisual = trunkSlots.VisualCount;
            
            sb.AppendLine($"–í–∏–∑—É–∞–ª—å–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã ({totalVisual}):");
            foreach (var kvp in visualCounts)
            {
                sb.AppendLine($"  {kvp.Key.DisplayName}: {kvp.Value} —à—Ç");
            }
        }

        var allResourceDefs = Resources.FindObjectsOfTypeAll<ResourceDef>();
        int totalInStorage = 0;
        sb.AppendLine("–î–∞–Ω–Ω—ã–µ —Å–∫–ª–∞–¥–∞:");
        
        foreach (var res in allResourceDefs)
        {
            ScriptableObject resourceSO = res as ScriptableObject;
            if (resourceSO)
            {
                int amount = vehicleStorage.GetAmount(resourceSO);
                if (amount > 0)
                {
                    sb.AppendLine($"  {res.DisplayName}: {amount} —à—Ç");
                    totalInStorage += amount;
                }
            }
        }

        return totalInStorage > 0 ? sb.ToString() : "–ë–∞–≥–∞–∂–Ω–∏–∫ –ø—É—Å—Ç";
    }

    void OnDrawGizmosSelected()
    {
        // –ó–æ–Ω–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
        Gizmos.color = isPlayerNearby ? Color.green : Color.yellow;
        Gizmos.DrawWireSphere(transform.position, interactionDistance);
        
        // –°—Ç–∞—Ç—É—Å
        #if UNITY_EDITOR
        if (vehicleStorage)
            UnityEditor.Handles.Label(transform.position + Vector3.up * 2f, GetTrunkStatus());
        #endif
    }

    #if UNITY_EDITOR
    [ContextMenu("DEBUG/Print Trunk Status")]
    void DebugPrintStatus()
    {
        Debug.Log($"[SimpleTrunkInteraction] {GetTrunkStatus()}");
    }

    [ContextMenu("DEBUG/Force Update Visualization")]
    void DebugUpdateVisualization()
    {
        if (trunkSlots && vehicleStorage)
        {
            trunkSlots.UpdateVisualization(vehicleStorage);
            Debug.Log("[SimpleTrunkInteraction] –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞");
        }
    }

    [ContextMenu("DEBUG/Test Load To Trunk")]
    void DebugTestLoadToTrunk()
    {
        Debug.Log("[SimpleTrunkInteraction] üß™ –¢–ï–°–¢–û–í–´–ô –í–´–ó–û–í LoadToTrunk()");
        LoadToTrunk();
    }

    [ContextMenu("DEBUG/Test Button Click")]
    void DebugTestButtonClick()
    {
        Debug.Log("[SimpleTrunkInteraction] üß™ –ò–º–∏—Ç–∞—Ü–∏—è –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏");
        if (loadButton)
        {
            Debug.Log("[SimpleTrunkInteraction] –ö–Ω–æ–ø–∫–∞ –Ω–∞–π–¥–µ–Ω–∞, –≤—ã–∑—ã–≤–∞–µ–º onClick");
            loadButton.onClick.Invoke();
        }
        else
        {
            Debug.LogError("[SimpleTrunkInteraction] ‚ùå loadButton == null");
        }
    }
    #endif
}